# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  web-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
        cache-key: flutter-${{ runner.os }}-v0
    - run: flutter doctor -v
    - run: flutter pub get
    - run: flutter build web --web-renderer html --release
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4.2.3
      with:
        branch: gh-pages
        folder: "build/web"
          
  create-build:
    name: Create ${{ matrix.target }} build
    strategy:
      matrix:
        target: [macOS, Windows, Linux, Android]
        include:
          - os: macos-10.15 # Catalina
            target: macOS
            build_target: macos
            build_path: build/macos/Build/Products/Release
            asset_extension: .zip
          - os: windows-2019
            target: Windows
            build_target: windows
            build_path: build\windows\runner\Release
            asset_extension: .zip
          - os: ubuntu-latest
            target: Linux
            build_target: linux
            build_path: build/linux/x64/release/bundle
            asset_extension: .tar.gz
          - os: ubuntu-20.04
            target: Android
            build_target: apk
            build_path: build/app/outputs/flutter-apk
            asset_extension: .apk
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with stable channel
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ matrix.os }}-v0
      - name: Install Linux dependencies
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
      - name: Install Android dependencies
        if: matrix.target == 'Android'
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Enable desktop support
        if: matrix.target != 'Android'
        run: |
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop
          flutter config --enable-windows-desktop
      - run: flutter doctor -v
      # Checkout gallery code, recreate missing files, and get packages.
      - name: Checkout code
        uses: actions/checkout@v2
      - run: flutter create .
      - run: flutter pub get

      # Build the application.
      - run: flutter build -v ${{ matrix.build_target }} --release

      # Package the build.
      - name: Copy VC redistributables to release directory for Windows
        if: matrix.target == 'Windows'
        run: |
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\msvcp140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140_1.dll') .
        working-directory: ${{ matrix.build_path }}
      - name: Rename build for Android
        if: matrix.target == 'Android'
        run: mv app-release.apk $GITHUB_WORKSPACE/q02_college_management_system_${{ matrix.target }}.apk
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for Linux
        if: matrix.target == 'Linux'
        run: tar czf $GITHUB_WORKSPACE/q02_college_management_system_${{ matrix.target }}.tar.gz *
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for macOS
        if: matrix.target == 'macOS'
        run: ditto -c -k --sequesterRsrc --keepParent basic_college_management_system.app $GITHUB_WORKSPACE/q02_college_management_system_${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for Windows
        if: matrix.target == 'Windows'
        run: compress-archive -Path * -DestinationPath ${env:GITHUB_WORKSPACE}\q02_college_management_system_${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: q02_college_management_system_${{ matrix.target }}${{ matrix.asset_extension }}
          path: ./q02_college_management_system_${{ matrix.target }}${{ matrix.asset_extension }}
          
              
  draft-release:
    runs-on: ubuntu-latest
    needs: [create-build]
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          path: download
      - run: |
          mkdir build
          find download -type f -print0 | xargs -0 mv -vt build
      - run: ls -lR build
      - name: Draft Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: build/*
          automatic_release_tag: latest
  